/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

group = 'com.itl'
version = '0.0.1'
sourceCompatibility = '11'

repositories {
    //Use Maven Central for resolving dependencies.
    mavenCentral()
}

ext {
	set('springCloudVersion', "2020.0.3")
}

configurations.all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Master Services Jar',  
        	'Implementation-Version': version,
        	'Main-Class': 'com.itl.MasterServiceApplication'
    }
    baseName = 'masterservice'
    archivesBaseName= 'masterservice'
}

dependencies {
    // Use JUnit Jupiter for testing.
    //testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

   
    implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.hibernate:hibernate-envers:5.5.5.Final'
	implementation 'net.sf.dozer:dozer:5.5.1'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	//implementation files('libs/mysql-connector-java-8.0.26.jar')
	//implementation 'org.postgresql:postgresql'
    implementation 'mysql:mysql-connector-java:8.0.26'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.retry:spring-retry'
    implementation 'org.apache.logging.log4j:log4j-core:2.14.1'
	implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.14.1'
	implementation 'org.slf4j:slf4j-api:1.7.32'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.0.4'
	implementation 'org.springframework.cloud:spring-cloud-starter-zipkin:2.2.8.RELEASE'
	implementation 'io.zipkin.brave:brave-context-log4j2'
	implementation 'io.zipkin.reporter2:zipkin-sender-okhttp3'
	implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin:3.0.3'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

	//This for Spring Boot Admin Module
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus:1.7.3'
	implementation 'de.codecentric:spring-boot-admin-starter-client:2.5.0'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'
	//testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
